I"z<p>Поключиться к стороннему процессу, где исполняется ваша библиотека, можно в несколько способов. В зависимости от задачи и этапа, на котором нужно начать отладку, можно найти свой вариант</p>

<h2 id="подключение-к-уже-запущеному-процессу">Подключение к уже запущеному процессу</h2>
<p>Если сторонний процесс уже запущен и вы можете подключаться к нему в любой момент, то это однозначно подходящее решение. В меню Debug -&gt; Attach to Process находим из списка свой процесс и нажимаем Atatch. Дальше, в месте где установлен breakpoint, процесс приостановит свое выполнение и вы можете продолжыть стандартный процесс отладки.</p>

<p><img src="/assets/images/2019/attach-to-process.png" alt="attach to process" /></p>

<h2 id="запуск-процесса-из-visual-studio-и-подключение-к-нему">Запуск процесса из Visual Studio и подключение к нему</h2>
<p>Этот вариант вам подойдет, если нужно подсоедениться к процессу очень быстро или сразу на старте. Я пишу логер для vstest и мне нужно подключиться к процессу сразу же после запуска, чтобы успеть попасть на процесс инициализации логера. Процесс выглядит следующим образом: по умолчанию, если вы пишете библиотеку, то у вас нет возможности ее запустить. Чтобы выполнить код из библиотеки ей нужен какой-то хост - exe файл. Этот exe-файл подгружает библиотеку и вызывает какой-то код из нее. Если открыть свойства проекта с вашей библиотекой и перейти на вкладку Debug, то по умолчанию в поле Launch установлено значение Project. Меняем его на Executable. В поле Executable указываем путь к фисполняемому файлу, если нужно, то в поле Application Arguments вносим аргументы, с которыми должен запуститься процесс. Пометьте ваш проект, как проект по уполчанию Set as StartUp Project. Теперь, если нажать F5, то Visual Studio запусть процесс и срузу же подключится к нему в режиме отладки.</p>

<p><img src="/assets/images/2019/executable.png" alt="executable" /></p>

<h2 id="запуск-процесса-из-visual-studio-и-подключение-к-дочерним-процессам">Запуск процесса из Visual Studio и подключение к дочерним процессам</h2>
<p>Третий подход - это расширение предыдущего. Во втором подходе есть одно ограничение - вы пожете отлаживать только основной процесс (тот самы который указали в поле Executable), если он порождает дочерние процессы и ваша библиотека загружается в них, то отладка не сработает. Заставить Visual Studio подключаться к дочерним процессам сожно с помощью плагина <a href="https://marketplace.visualstudio.com/items?itemName=vsdbgplat.MicrosoftChildProcessDebuggingPowerTool">Microsoft Child Process Debugging Power Tool</a>. После установки плагина в настройках установите галочку напротив пункта <a href="https://devblogs.microsoft.com/devops/introducing-the-child-process-debugging-power-tool/">Enable child process debugging</a>.</p>

<p><img src="/assets/images/2019/process-debugging-settings.png" alt="process debugging settings" />
и сохраните настройки</p>

<p><img src="/assets/images/2019/child-process-debugging.jpg" alt="Enable child process debugging" />. Теперь после запуска процесса, Visual Studio подключается так же к дочерним процессам и отлаживать их.</p>

<p><em>Ну и в заключение цитата:</em></p>
<blockquote>
  <p>Программисты отлаживают, а филологи откладывают. Кроме того, программисты понимают, в чем тут шутка, а филологи только думают, что понимают.</p>
</blockquote>
:ET