---
title: "XPath - примеры запросов"
layout: post
date: 2018-10-21 12:00
image: /assets/images/xpath_featured.png
headerImage: false
tag:
- xpath
- selenium
star: false
category: blog
author: yurii-hunter
description: XPath - примеры запросов
---
## XPath - примеры запросов

Для проверки запросов откройте <a href="/xpath-tests" target="_blank">тестовую страницу</a>

_**/**_ - выбрать корневой узел длкумента

_**/html**_ - выбрать корневой элемент

_**/html/body/div**_ - выбрать элемент _div_, который является прямым наследником элемента body

_**/html/body/div/\***_ - выбрать все элементы, которые являются прямыми наследниками _div_

_**//li**_ - выбрать все _div_ элементы независимо от их позиции в документе

_**//li[1]**_ - выбрать первый дочерний элемент _li_

_**//li[last()]**_ - выбрать последний дочерний элемент _li_

_**//li[position()<3]**_ - выбрать первый и второй дочерний элемент _li_ в списке

_**(//li)[2]**_ - выбрать второй элемент в общей структуре

_**//div[@name]**_ - выбрать все _div_ элементы, у которых есть атрибут _name_

_**//div[@name='content']**_ - выбрать все _div_ элементы у которых значение атрибута _name_ равно _content_

_**//div[@name='content' or @class]**_ - выбрать все _div_ элементы у которых значение _name_ равно _content_ или если у них есть атрибут _class_

_**and**_ - должны выполняться оба условия

_**or**_ - должно выполняться хоть одно их условий

_**not()**_ - инверсия значения

_**//div[contains(@class, 'btn')]**_ - выбрать все _div_ элементы у которых атрибут _class_ содержит подстроку _btn_

_**//div[text()='hello world']**_ - выбрать все элементы _div_ внутри которых текст является hello world

_**//div[contains(., 'world')]**_ - выбрать все элементы _div_ у которых любой из вложенных элементов содержит слово _world_

_**//div[./span]**_ - выбрать все элементы _div_ у которых есть прямой наследник _span_

_**//div \| //span**_ - выбрать все элементы _div_ или _span_

### Оси
Оси — это база языка XPath. Для некоторых осей существуют сокращённые обозначения.

_**child::**_ — содержит множество элементов-потомков (элементов, расположенных на один уровень ниже). Это название сокращается полностью, то есть его можно вовсе опускать.  

_**descendant::**_ — содержит полное множество элементов-потомков (то есть, как ближайших элементов-потомков, так и всех их элементов-потомков).  

_**descendant-or-self::**_ — содержит полное множество элементов-потомков и текущий элемент. Выражение /descendant-or-self::node()/ можно сокращать до //. С помощью этой оси, например, можно вторым шагом организовать отбор элементов с любого узла, а не только с корневого: достаточно первым шагом взять всех потомков корневого. Например, путь //span отберёт все узлы span документа, независимо от их положения в иерархии, взглянув как на имя корневого, так и на имена всех его дочерних элементов, на всю глубину их вложенности.  

_**ancestor::**_ — содержит множество элементов-предков.  

_**ancestor-or-self::**_ — содержит множество элементов-предков и текущий элемент.  

_**parent::**_ — содержит элемент-предок на один уровень назад. Это обращение можно заменить на ..

_**self::**_ — содержит текущий элемент. Это обращение можно заменить на .

_**following::**_ — содержит множество элементов, расположенных ниже текущего элемента по дереву (на всех уровнях и слоях), исключая собственных потомков.

_**following-sibling::**_ — содержит множество братских элементов того же уровня, следующих за текущим слоем.

_**preceding::**_ — содержит множество элементов, расположенных выше текущего элемента по дереву (на всех уровнях и слоях), исключая множество собственных предков.

_**preceding-sibling::**_ — содержит множество братских элементов того же уровня, предшествующих текущему слою.

_**attribute::**_ — содержит множество атрибутов текущего элемента. Это обращение можно заменить на символ @

_**namespace::**_ — содержит множество элементов, относящихся к тому или иному пространству имён (то есть присутствует атрибут xmlns).